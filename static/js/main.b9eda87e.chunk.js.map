{"version":3,"sources":["components/MovieComp/MovieComponent.js","components/MovieInfoComp/MovieInfoComponent.js","App.js","index.js"],"names":["CoverImage","styled","img","_templateObject","_taggedTemplateLiteral","MovieName","span","_templateObject2","MovieInfo","_templateObject3","MovieComponent","props","_props$movie","movie","Title","Year","imdbID","Type","Poster","React","createElement","className","onClick","onMovieSelect","window","scrollTo","top","behavior","src","alt","Close","_templateObject4","MovieInfoComponent","_useState","useState","_useState2","_slicedToArray","movieInfo","setMovieInfo","selectedMovie","useEffect","Axios","get","concat","API_KEY","then","response","data","Fragment","imdbRating","Language","Rated","Released","Runtime","Genre","Director","Actors","Plot","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","App","searchQuery","updateSearchQuery","_useState3","_useState4","movieList","updateMovieList","_useState5","_useState6","_useState7","_useState8","timeoutId","updateTimeoutId","fetchData","_ref","_asyncToGenerator","_callee","searchString","_context","axios","Search","_x","apply","arguments","style","width","height","placeholder","onChange","e","clearTimeout","target","timeout","setTimeout","srcset","map","index","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b9eda87e.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport './Movie.css'\n\n\nconst CoverImage = styled.img`\n  object-fit: cover;\n  height: 362px;\n`;\nconst MovieName = styled.span`\n  font-size: 18px;\n  font-weight: 600;\n  color: black;\n  margin: 15px 0;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst MovieInfo = styled.span`\n  font-size: 16px;\n  font-weight: 500;\n  color: black;\n  white-space: nowrap;\n  overflow: hidden;\n  text-transform: capitalize;\n  text-overflow: ellipsis;\n`;\nconst MovieComponent = (props) => {\n  const { Title, Year, imdbID, Type, Poster } = props.movie;\n\n  return (\n    <div className=\"MovieContainer\"\n      onClick={() => {\n        props.onMovieSelect(imdbID);\n        window.scrollTo({ top: 0, behavior: \"smooth\" });\n      }}\n    >\n      <CoverImage src={Poster} alt={Title} />\n      <MovieName>{Title}</MovieName>\n      <div className=\"InfoColumn\">\n        <MovieInfo>Year : {Year}</MovieInfo>\n        <MovieInfo>Type : {Type}</MovieInfo>\n      </div>\n    </div>\n  );\n};\nexport default MovieComponent;\n","import React, { useEffect, useState } from \"react\";\nimport Axios from \"axios\";\nimport { API_KEY } from \"../../App\";\nimport styled from \"styled-components\";\nimport './MovieInfo.css';\n\nconst CoverImage = styled.img`\n  object-fit: cover;\n  height: 350px;\n`;\n\nconst MovieName = styled.span`\n  font-size: 22px;\n  font-weight: 600;\n  color: black;\n  margin: 15px 0;\n  white-space: nowrap;\n  overflow: hidden;\n  text-transform: capitalize;\n  text-overflow: ellipsis;\n  & span {\n    opacity: 0.8;\n  }\n`;\nconst MovieInfo = styled.span`\n  font-size: 16px;\n  font-weight: 500;\n  color: black;\n  overflow: hidden;\n  margin: 4px 0;\n  text-transform: capitalize;\n  text-overflow: ellipsis;\n\n  & span {\n    opacity: 0.5;\n  }\n`;\nconst Close = styled.span`\n  font-size: 16px;\n  font-weight: 600;\n  color: black;\n  background: lightgray;\n  height: fit-content;\n  padding: 8px;\n  border-radius: 50%;\n  cursor: pointer;\n  opacity: 0.8;\n`;\nconst MovieInfoComponent = (props) => {\n  const [movieInfo, setMovieInfo] = useState();\n  const { selectedMovie } = props;\n\n  useEffect(() => {\n    Axios.get(\n      `https://www.omdbapi.com/?i=${selectedMovie}&apikey=${API_KEY}`,\n    ).then((response) => setMovieInfo(response.data));\n  }, [selectedMovie]);\n  return (\n    <div className=\"MovieInfoContainer\">\n      {movieInfo ? (\n        <>\n          <CoverImage src={movieInfo?.Poster} alt={movieInfo?.Title} />\n          <div className=\"InfoColumn\">\n            <MovieName>\n              {movieInfo.Type}: <span>{movieInfo.Title}</span>\n            </MovieName>\n            <MovieInfo>\n              IMDB Rating: <span>{movieInfo.imdbRating}</span>\n            </MovieInfo>\n            <MovieInfo>\n              Year: <span>{movieInfo.Year}</span>\n            </MovieInfo>\n            <MovieInfo>\n              Language: <span>{movieInfo.Language}</span>\n            </MovieInfo>\n            <MovieInfo>\n              Rated: <span>{movieInfo.Rated}</span>\n            </MovieInfo>\n            <MovieInfo>\n              Released: <span>{movieInfo.Released}</span>\n            </MovieInfo>\n            <MovieInfo>\n              Runtime: <span>{movieInfo.Runtime}</span>\n            </MovieInfo>\n            <MovieInfo>\n              Genre: <span>{movieInfo.Genre}</span>\n            </MovieInfo>\n            <MovieInfo>\n              Director: <span>{movieInfo.Director}</span>\n            </MovieInfo>\n            <MovieInfo>\n              Actors: <span>{movieInfo.Actors}</span>\n            </MovieInfo>\n            <MovieInfo>\n              Plot: <span>{movieInfo.Plot}</span>\n            </MovieInfo>\n          </div>\n          <Close onClick={() => props.onMovieSelect()}>X</Close>\n        </>\n      ) : (\n        \"Loading...\"\n      )}\n    </div>\n  );\n};\nexport default MovieInfoComponent;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport MovieComponent from \"./components/MovieComp/MovieComponent\";\nimport MovieInfoComponent from \"./components/MovieInfoComp/MovieInfoComponent\";\nimport './App.css'\n\nexport const API_KEY = \"6f49b127\";\n\n\nfunction App() {\n  const [searchQuery, updateSearchQuery] = useState(\"\");\n\n  const [movieList, updateMovieList] = useState([]);\n  const [selectedMovie, onMovieSelect] = useState();\n\n  const [timeoutId, updateTimeoutId] = useState();\n\n  const fetchData = async (searchString) => {\n    const response = await axios.get(\n      `https://www.omdbapi.com/?s=${searchString}&apikey=${API_KEY}`,\n    );\n    updateMovieList(response.data.Search);\n  };\n\n  const onTextChange = (e) => {\n    onMovieSelect(\"\")\n    clearTimeout(timeoutId);\n    updateSearchQuery(e.target.value);\n    const timeout = setTimeout(() => fetchData(e.target.value), 500);\n    updateTimeoutId(timeout);\n  };\n  return (\n    <div className=\"Container\">\n      <header className=\"header\">\n        <div className=\"AppName\">\n          <img className=\"MovieImage\" src=\"../public/movie-icon.svg\" alt=\"\" />\n          React Movie App\n        </div>\n        <div className=\"SearchBox\">\n        {/* style={{width: '32px', height: '32px'}} */}\n          <img src=\"../public/search-icon.svg\" alt=\"search\" style={{width: '32px', height: '32px'}} />\n          <input className=\"SearchInput\"\n            placeholder=\"Search Movie\"\n            value={searchQuery}\n            onChange={onTextChange}\n          />\n          <img src=\"public/search-icon.svg\" alt=\"\" srcset=\"\" />\n        </div>\n      </header>\n      {selectedMovie && <MovieInfoComponent selectedMovie={selectedMovie} onMovieSelect={onMovieSelect}/>}\n      <div className=\"MovieListContainer\">\n        {movieList?.length ? (\n          movieList.map((movie, index) => (\n            <MovieComponent\n              key={index}\n              movie={movie}\n              onMovieSelect={onMovieSelect}\n            />\n          ))\n        ) : (\n          <img src=\"../public/movie-icon.svg\" alt=\"\" className=\"Placeholder\" />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}